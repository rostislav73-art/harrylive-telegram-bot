import os
from flask import Flask, request
import telebot
from openai import OpenAI
from dotenv import load_dotenv

# –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ .env –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏—Ç–µ
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
RAILWAY_STATIC_URL = os.getenv("RAILWAY_STATIC_URL")
openai_api_key = os.getenv("OPENAI_API_KEY")

if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN is not set in environment variables")
if not openai_api_key:
    raise ValueError("‚ùå OPENAI_API_KEY is not set in environment variables")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ Telebot –∏ Flask
bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# –ó–∞–¥–∞–≤–∞–º–µ OpenAI API –∫–ª—é—á
os.environ["OPENAI_API_KEY"] = openai_api_key
client = OpenAI()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ webhook
webhook_url = f"{RAILWAY_STATIC_URL}/{BOT_TOKEN}"
bot.remove_webhook()
bot.set_webhook(url=webhook_url)
print("‚úÖ Webhook set to:", webhook_url)

# /start handler
@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, "üëã –ó–¥—Ä–∞—Å—Ç–∏! –ê–∑ —Å—ä–º HarryLiveBot_73 ‚Äì –≥–æ—Ç–æ–≤ —Å—ä–º –¥–∞ –≥–æ–≤–æ—Ä—è —Å —Ç–µ–±!")

# GPT handler
@bot.message_handler(func=lambda message: True)
def gpt_handler(message):
    try:
        user_input = message.text
        response = client.chat.completions.create(
            model="gpt-4-turbo",
            messages=[
                {"role": "system", "content": "–¢–∏ —Å–∏ –ø–æ–ª–µ–∑–µ–Ω –∞—Å–∏—Å—Ç–µ–Ω—Ç –≤ Telegram."},
                {"role": "user", "content": user_input}
            ]
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)

    except Exception as e:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ—Ç–≥–æ–≤–æ—Ä–∞ –æ—Ç GPT.")
        print("‚ùå Error:", e)

# Webhook endpoint ‚Äì –ø–æ–ª—É—á–∞–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram
@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def telegram_webhook():
    json_str = request.get_data().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "", 200

# –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∞
@app.route("/", methods=["GET"])
def index():
    return "‚úÖ HarryLive Telegram Bot is running!", 200

# Flask —Å—ä—Ä–≤—ä—Ä
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
